What should you do ?

Start in project other:webapp-resources
 1. create task to extract WAR
 2. exclude ALL things from WAR which you don't need:
    (The WAR should ONLY contain *.js resources)

Then project service
 3. make separate API jar containing
    - classes from package be/cegeka/gradle/api
    - readme.txt
 4. configuration testCompile requires test classes from project 'domain':
    change the build such that project 'service' can be tested with Gradle.

Then project webapp
 5. add the API jar from project 'service' to folder 'api' of webapp.war
 6. include content of webapp-resources.war in webapp.war
 7. can you reuse the task you created in 1. for this project ?

Then the root project
 8. add Gradle config such that IntelliJ compiles classes to different directory
 9. from the $rootDir run 'gradle clean'
    then go to dir webapp and run 'gradle build'.
    Which project is built / tested ?
    Is that any different from Maven's behaviour ?
 10. Use the 'buildscript' script block to add a dependency
    to the 'classpath' configuration of your Gradle build.
    What is the purpose of this script block / configuration ?